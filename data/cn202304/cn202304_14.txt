算力网络四面三级算力度量技术体系 杜宗鹏  等 热点专题
中兴通讯技术
2023  年 8 月    第 29 卷第  4 期   Aug . 2023    Vol . 29  No. 4形处理器 （GPU） 、内存 、磁盘 、网络等多维算力资源进行
感知和维护 。当有服务部署需求时 ，算力网络系统需要基于
维护的资源视图 ，通过适配算法为用户找到合适的算力资源
以完成服务部署 。
算力网络中各种异构的算力资源散落各地 ，用户不同的
部署服务对各维度算力资源也有着不同的需求 。算力服务部
署要解决的问题是在掌握资源状态信息的情况下 ，如何合理
调度资源 ，部署服务 。算力服务的部署是算力网络实现低时
延、高可靠优质服务调度的前提 。
在云计算或边缘计算的领域 ，算力数据模型相关的多项
工作都可以作为算力网络中算力度量和建模的参考 。例如 ，
用于云服务器带外管理的 Redfish 项目从不同维度定义了大
量算力资源相关的模型 ；创建于 2021 年的 Anuket 项目支持
云原生和虚拟网络功能 、基础设施和服务的快速部署 ，致力
于整合 OpenStack 和Kubernetes （K8s）等知名工具的不同
架构 。
云原生中流行的编排管理工具 K8s支持集群内部的服务
部署和资源调度 。一个 K8s集群包含至少一个主节点和若干
从节点 ，主节点为集群管理节点 ，能根据各节点的资源状态
完成容器到物理节点的分配[7]。K8s中的最小调度单位为
Pod，一个 Pod可以包含多个容器 。每个 Pod都可以在部署时
指定其 CPU 和内存的数量 。K8s的资源调度是指将 Pod任务
映射到物理资源的过程 。在该过程中 ，主节点中的调度器
Kube-scheduler 负责决策一个 Pod应该被调度到集群中的哪
一个节点上 。在服务节点的具体选择时 ，可以指定不同的节
点优选策略 ，例如优选算力资源占用比较小的节点 ，或者是
优选 CPU 和内存使用率接近的节点 。
资源的感知和监控是资源调配的前提 。有效的资源感知
能够精确地传递资源状态信息 ，从而为后续的资源调度 、服
务迁移等业务奠定基础 。例如 ，作为一款基于时序数据库的
监控告警系统[8]，开源软件 Prometheus 支持多维数据模型 ，
收集由度量名和键值对组成的时间序列数据 ，被广泛应用于
云原生中的资源监控中 。
算力网络的服务部署和资源调度模式可以参考上述云原
生中的编排管理工具 ，在面向异构立体泛在的算力场景方面
进行增强 。通过了解各个算力节点的算力资源和剩余可用资
源的情况 ，并根据算力业务需求 ，按需制定合适的部署策
略，灵活地调度资源 ，从而完成算力服务部署 ，提升算力服
务提供能力 。
2.2 算力服务选择
在完成算力服务部署后 ，算力网络需要为算力用户找到并接入一个合适的算力服务节点 。该节点需要离用户较近 ，
满足用户的时延需求 ，还需要有充足的算力资源 ，支持算力
业务的快速完成 。这个过程被称为算力服务选择 ，或算力服
务节点的负载均衡 。算力服务节点的状态是实时变化的 ，因
此在网络中实时同步这些信息存在一定的挑战 。
在算力网络服务场景中 ，不同网络位置能够提供相同的
算力服务 ，然而 ，此时不同服务节点的计算资源通常是不同
的，计算资源的负载情况也在变化 。尤其是在多接入边缘计
算（MEC）的场景中 ，计算资源相对有限 ，因此 MEC 之间
的协同就显得更加重要 。
算力感知网络 （CAN）[3, 9]为MEC 的协同提供了一种基
于网络的负载均衡机制 。在相关场景中 ，整个网络就像一个
虚拟的负载均衡设备一样运作 。在CAN 的机制中 ，策略决
策点是一个网络设备 ，位于网络转发节点或是网络管控节点
上。然而 ，对于一个网络设备而言 ，了解算力的状态还是一
个新的技术领域 。
3 四面三级算力度量技术体系
网络所提供的服务主要聚焦于转发 ，例如 IP网络的核
心就是按照目的地址 ，把报文转发到目标网络 。计算所对接
的服务会更加复杂 ，影响计算性能的因素也更多 ，因此较难
给出单维度的度量单位 。网络中的算力资源分散 ，异构算力
资源种类繁多 ，是算力统一度量所面临的主要困难 。
算力芯片的种类包括 CPU、GPU 、嵌入式神经网络处理
器（NPU） 、张量处理器 （TPU）等。这些芯片都有各自的
性能指标和应用场景 ，可以针对特定业务进行计算优化 。例
如，通用算力以 CPU 承载为主 ，主要面向通用软件应用 ，
执行逻辑运算 ；人工智能算力以 NPU/TPU/GPU 承载为主 ，
主要面向 AI应用 ，逻辑简单 ，但计算密集 、并发程度高 ；
超算算力以 CPU/GPU 承载为主 ，主要面向科学计算 、工业
仿真等场景 ，计算复杂且对计算精度要求高 。
在计算领域中 ，常见的一个度量单位是 FLOPS ，即每秒
执行的浮点运算次数 。但计算业务的执行效率和能力 ，并不
仅仅取决于计算节点的浮点运算能力 ，其影响因素还包括输
入/输出 （I/O）效能 、内存架构 、缓存速率等 。因此 ，在算
力通告和服务调度中 ，需要综合考虑如算力节点的负载等的
多种因素 。
算力服务的性能受到芯片 、存储 、网络 、平台软件等多
维因素的影响 ，因此我们需要对算力服务节点进行综合评
估。算力的度量和建模不仅可以参考制造商提供的规格算力
值，例如 FLOPS ，还可以参考一些可以全面反映服务支持能
力的综合指标值 。为了描述算力网络中服务节点的算力 ，我
10